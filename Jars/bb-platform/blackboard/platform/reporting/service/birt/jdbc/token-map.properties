# This file contains tokens that are replaced in SQL strings in reports when those reports are executed in 
# SQL Server - we set the queries up to work for Oracle by default. Each database type that will
# require replacement should be listed in the databases property.  Each database should also have a property
# which will have a list of operations or replacements that will be performed when a report is run against 
# that type of database. Each operation has a value and replacement property.  The value is the 
# string to be replaced (can be a regular expression or just a string) and the replacement 
# property is self-explanatory. 
# if version specific values are required (hopefully it's never required), the following syntax should be used:
# databases=mssql_10 mssql_10_50
# where the first number is the major version and the second number is the minor version.  Neither is required.
# Also, the name should match, so
# db.mssql_10.name=Microsoft_SQL_Server.10
# db.mssql_10_50.name=Microsoft_SQL_Server.10.50
# where the "mssql_10" matches the databases value, and the name is of the format 
# productname.majorversion.minorversion as returned by the jdbc connection.
# previous versions of this file also have examples if necessary.

databases=mssql

db.mssql.name=Microsoft_SQL_Server
db.mssql.operations=tochar isnull stdev day month hour weekday dual concatenation oracle_line ms_line

op.tochar.value=token:to_nchar
op.tochar.replacement=

op.isnull.value=token:nvl
op.isnull.replacement=ISNULL

op.stdev.value=token:stddev
op.stdev.replacement=STDEV

op.day.value=regex:to_char\\(([a-zA-z_][a-zA-z_.]*),[ ]*'YYYY-MM-DD'\\)
op.day.replacement=convert(char(10), $1, 20)

op.month.value=regex:to_char\\(([a-zA-z_][a-zA-z_.]*),[ ]*'YYYY-MM'\\)
op.month.replacement=convert(char(7), $1, 20)

op.hour.value=regex:to_char\\(([a-zA-z_][a-zA-z_.]*),[ ]*'HH24'\\)
op.hour.replacement=datepart(hour, $1)

op.weekday.value=regex:to_char\\(([a-zA-z_][a-zA-z_.]*),[ ]*'D'\\)
op.weekday.replacement=datepart(weekday,$1)

op.dual.value=regex:from dual
op.dual.replacement=/* from dual */

op.concatenation.value=regex:\\|\\|
op.concatenation.replacement=+

op.oracle_line.value=regex:/\\*ORCL\\*/
op.oracle_line.replacement=--ORCL--

op.ms_line.value=regex:--MS--
op.ms_line.replacement=/*MS*/

